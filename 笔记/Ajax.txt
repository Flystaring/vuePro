1.Ajax:Ajax技术主要要做的事情就是向服务器发送请求,去获取服务器的数据;
 
2.服务器:提供服务的一台电脑,这台电脑上一般安装Linux,unix操作系统,并且在操作系统中安装了能够提供服务的软件;

3.$arr = array();
  数组在php中是复杂类型,不能使用echo直接输出;
print_r()//简单的输出数组信息
var_dump()//输出详细的数组信息

4.将一个数组转换成json格式的字符串
$str = json_encode($str);
这样就可以使用echo输出;

5.自定义数组下标
$arr = array(“name”=>”zhangsan”);

6.二维数组
$arr = array();
$arr[“book”] = array(“name”=>”三国演义”,”price”=>”20”);

7.字符串拼接用”.”

8.数组遍历:
$arr = array();
$arr[0] = “jack”;
$arr[1] = “rose”;
for($i = 0; $i < count($arr); $i++){
	echo $arr[$i];
}
count():获取数组长度;
foreach($arr as $key => $v){
	echo 
}

9.日期:
date("Y-m-d")
date(“Y/m/d”);
星期
date(“l”);
时间:
date("h:i:sa")
h - 带有首位零的 12 小时小时格式
i - 带有首位零的分钟
s - 带有首位零的秒（00 -59）
a - 小写的午前和午后（am 或 pm）

date_default_timezone_set("Asia/Shanghai");

10.php上传文件时,在form表单需要添加属性 enctype="multipart/form-data"
保证文件以二进制上传;

11.move_uploaded_file(file,newloc):函数将上传的文件移动到新位置;

12.array_key_exists(索引名称,数组)判断数组中是否有该索引对应的数据,如果有,返回true,否则返回false;

13.IE6以下Ajax兼容处理
var x = null;
if(window.XMLHttpRequest){
  x = new XMLHttpRequest();
}else{
  x = new ActiveXObject(“Microsoft.XMLHTTP”);
}

14.Ajax请求四步:
get方式:
1)var x = new XMLHttpRequest();
2)x.open(“get”,”*.php?username=” + text,true)//true表示异步,false表示同步;
3)x.send(null);
4)x.onreadystatechange = function(){
   if(x.readyState == 4 && x.status == 200){
	x.responseText;
  }
}
post方式:
1)var x = new XMLHttpRequest();
2)x.open(“post”,”*.php”,true)//true表示异步,false表示同步;
3)x.setRequestHeader(“Content-Type”,”application/x-www-form-urlencode”);
3)x.send(“username=”+text);
4)x.onreadystatechange = function(){
   if(x.readyState == 4 && x.status == 200){
	x.responseText;
  }
}

15.readyState值:0,1,2,3,4;
0:XMLHttpRequest对象创建完成;
1:表示XMLHttpRequest对象已经发送请求;
2:已经返回了服务器的数据
3:正在解析服务器数据;
4:数据解析完毕,可以使用
status常见值:200,404,500;
200:服务器返回数据ok,可以使用;
404:请求地址写错(page is not found);
500:服务器端错误;

16.XML数据格式缺点:体积太大,传输慢,元数据(即描述数据的数据)太多,解析不方便,目前使用很少;

17.如何向服务器发送一个请求得到服务器端的数据
1)通过Ajax发送请求获取服务器端的数据(只能获取自己服务器的数据)
2)通过跨域请求去获取服务器端的数据(可以向自己的服务器请求数据,也可以向别人的服务器请求数据);

18.同源条件:
1)协议要相同
2)域名要相同
3)端口号相同
ajax只能获取同源数据;若三者不满足其一,则不同源;

19.跨域请求的本质:通过script标签的scr属性引入其他服务器的文件,得到其他服务器文件中的数据;

20.实现跨域请求:即动态的创建script标签,给script添加scr属性,属性值就是请求的地址,这种方式注定只能是get方式,因为需要在url添加参数,不仅可以添加参数,还可以动态的指定回调函数名;

21.jquery使用ajax跨域请求,dataType:’jsonp’这是一个重要的属性,必须将dataType:’json’,才会发送跨域请求;jsonp:’cb’;建议不要甚至jsonpCallback属性;

22.模板引擎的使用
1)引入模板引擎代码
<script type=‘text/javascript’ src=‘template.js’></script>
2)添加一个模板
<script type=‘text/html’ id=‘xxx’>
    <table>
	<tr>
	   <th>书名</th>
           <th>作者</th>
           <th>描述</th>
	</tr>
        {{each result as value i}}//data已经传入,所以result是data里内容,value是数组元素,i是索引;
	   <tr>
	      <td>{{value.name}}</td>
              <td>{{value.author}}</td>
              <td>{{value.dec}}</td>
	   <tr>
        {{/each}}
    </table>
</script>

3)将模板和数据结合起来生成一个html片段
var data = {result:[{name:’三国演义’,author:’罗贯中’,dec:’一个杀伐纷争的年代’},]}
//调用template函数生成html片段,函数第一个参数是模板id,函数第二个参数是数据;
var html = template(‘xxx’,data);

4)将html添加进页面;
if语法:
{{if  istrue}}
{{else}}
{{/if}}

{{if value}} ... {{/if}}
{{if v1}} ... {{else if v2}} ... {{/if}}

如果返回的是字符串包含html标签
var data = ’<span>Hi</span>’;
此时需要转义:{{#data}};
如果直接返回的是数组,需要对数组进行处理,把数组赋值给对象;

在插值时,不能直接使用name属性,会报错(非法调用);但是原生语法可以使用;

{{@ info}}:加上@可以把info里有标签时,会当成标签解析;

如果在插值的时候需要将该值格式化
例如:{{tc_name}}得到的结果是 山东省|济南市|章丘市,但是我们需要数据是 山东省 济南市 章丘市
因此需要将字符串进行格式化;
第一解决方法:将获得的数据在加入页面前就进行处理;
第二种解决方法:使用过滤器;
过滤器在js中就是一个函数,该函数的作用就是进行数据进行格式化;
template.defaults.imports.dateFormat = function(date, format){/*[code..]*/};
template.defaults.imports.timestamp = function(value){return value * 1000};

{{date | timestamp | dateFormat 'yyyy-MM-dd hh:mm:ss'}}

23.jsonp跨域请求的本质是 返回方法的调用;

24.php的explode和split方法:分割

substr(索引,长度)

strlen():获取字符串长度;

25.php中,file_get_contents(“Url”):发送get请求;