1.bootstrap配置
引入bootstrap,css文件
判断浏览器IE:添加两个js文件, html5shiv.min.js 和 respond.js
引入jq文件和bootstrap文件.

2.bootstrap外层布局容器(.container固定宽度)
w>1200时,w=1170; lg large
w:992~1200,w=970; md middle
w:768~992,w=750; sm small
w<768,w=100%; xs extra small
布局容器(.container-fluid)为全屏容器,w=100%;

3.栅格系统:
1)默认12列
2)布局.container-fluid/.container>.row>column(标签);
.col-xs-4:设置在当前div在xs屏幕占据当前屏幕的12等分中的4等分
offset:偏移,偏移距离以栅格为单位,但是这中偏移会直接影响后面元素,是以margin实现的;
push(往后推)/pull(往前拉):实现方式是以定位实现,会出现元素重叠.
3)列嵌套; 
4)隐藏元素,以display:none实现


4.在bootstrap中,应用了其组件,如果要修改其样式,首先要查看需要修改的样式在哪个类名中设置,那么你修改时,需要在其对应的类名中修改.

5.在使用bootstrap某个插件时,可以把其css设置的部分单独拿出来,这样修改样式时,就可以对应修改.

6.row必须包含在.contaner(固定宽度)或.contaner-fluid(100%宽度)中,以便为其赋予合适的排列和内补;

7.内容应放置于列内,并且只有列可以作为row的直接子元素;

8.如果在一个 .row 内包含的列（column）大于12个，包含多余列（column）的元素将作为一个整体单元被另起一行排列。

9.通过使用 .col-md-push-* 和 .col-md-pull-* 类就可以很容易的改变列（column）的顺序。
<div class="row">
  <div class="col-md-9 col-md-push-3">.col-md-9 .col-md-push-3</div>
  <div class="col-md-3 col-md-pull-9">.col-md-3 .col-md-pull-9</div>
</div>

10.提供了 .h1 到 .h6 类，为的是给内联（inline）属性的文本赋予标题的样式。
在标题内还可以包含 <small> 标签或赋予 .small 类的元素，可以用来标记副标题。

11.Bootstrap 将全局 font-size 设置为 14px，line-height 设置为 1.428。这些属性直接赋予 <body> 元素和所有段落元素。另外，<p> （段落）元素还被设置了等于 1/2 行高（即 10px）的底部外边距（margin);

12.通过给段落添加.lead类可以让段落突出显示;
使用<mark><mark>标签可以让里面内容高亮
<del></del>可以给文本添加删除线;
额外插入文本使用<ins></ins>(insert);

13.文本对其方式:
.text-left;
.text-right;
.text-justify;
.text-nowrap;

改变文本大小写:
.text-lowercase:字母全小写;
.text-uppercase:字母全大写;
.text-capitalize:每个首字母大写;

.blockquote-reverse:可以让引用呈现内容对齐的效果;

<var>x</var>:通过var标签定义标记变量;

14.表格:
1)为任意 <table> 标签添加 .table 类可以为其赋予基本的样式 — 少量的内补（padding）和水平方向的分隔线。

2)条纹状表格
通过 .table-striped 类可以给 <tbody> 之内的每一行增加斑马条纹样式。

3)带边框的表格
添加 .table-bordered 类为表格和其中的每个单元格增加边框。

4)鼠标悬停
通过添加 .table-hover 类可以让 <tbody> 中的每一行对鼠标悬停状态作出响应。

15.表单
1)所有设置了.form-control类的<input>,<textarea>,<select>元素都将被默认设置成宽度为100%;
将label元素和控件包裹在.form-group中,可以得到最好的排列;

2)为form表单添加.form-inline类可以使内容左对齐,并且表现为inline-block级别的控件;

3)水平排列的表单
通过为表单添加 .form-horizontal 类，并联合使用 Bootstrap 预置的栅格类，可以将 label 标签和控件组水平并排布局。这样做将改变 .form-group 的行为，使其表现为栅格系统中的行（row），因此就无需再额外添加 .row 了。

4)内联单选和多选框
通过将 .checkbox-inline 或 .radio-inline 类应用到一系列的多选框（checkbox）或单选框（radio）控件上，可以使这些控件排列在一行。

5)下拉列表（select）
注意，很多原生选择菜单 - 即在 Safari 和 Chrome 中 - 的圆角是无法通过修改 border-radius 属性来改变的。

6)静态控件
如果需要在表单中将一行纯文本和 label 元素放置于同一行，为 <p> 元素添加 .form-control-static 类即可。

7)只读状态
为输入框设置 readonly 属性可以禁止用户修改输入框中的内容。处于只读状态的输入框颜色更浅（就像被禁用的输入框一样），但是仍然保留标准的鼠标状态。

8)校验状态
Bootstrap 对表单控件的校验状态，如 error、warning 和 success 状态，都定义了样式。使用时，添加 .has-warning、.has-error 或 .has-success 类到这些控件的父元素即可。

9)添加额外的图标
你还可以针对校验状态为输入框添加额外的图标。只需设置相应的 .has-feedback 类并添加正确的图标即可.
<div class="form-group has-success has-feedback">
  <label class="control-label" for="inputSuccess2">Input with success</label>
  <input type="text" class="form-control" id="inputSuccess2" aria-describedby="inputSuccess2Status">
  <span class="glyphicon glyphicon-ok form-control-feedback" aria-hidden="true"></span>
</div>

10)控件尺寸
通过 .input-lg/.input-sm 类似的类可以为控件设置高度，通过 .col-lg-* 类似的类可以为控件设置宽度。

16.按钮
1)为 <a>、<button> 或 <input> 元素添加按钮类（button class）即可使用 Bootstrap 提供的样式。

2)链接被作为按钮使用时的注意事项
如果 <a> 元素被作为按钮使用 -- 并用于在当前页面触发某些功能 -- 而不是用于链接其他页面或链接当前页面中的其他部分，那么，务必为其设置 role="button" 属性。

3)按钮颜色:
btn-default,btn-primary,btn-success,btn-info,btn-warning,btn-danger,btn-link

4)尺寸
使用 .btn-lg、.btn-sm 或 .btn-xs 就可以获得不同尺寸的按钮.
通过给按钮添加 .btn-block 类可以将其拉伸至父元素100%的宽度，而且按钮也变为了块级（block）元素

5)激活状态
由于 :active 是伪状态，因此无需额外添加，但是在需要让其表现出同样外观的时候可以添加 .active 类。

17.图片
1)图片形状
通过为 <img> 元素添加以下相应的类，可以让图片呈现不同的形状
.img-rounded,.img-circle,. img-thumbnail(让图片与边框有个空白内边距)

18.辅助类
1)情境文本颜色
通过颜色来展示意图，Bootstrap 提供了一组工具类。这些类可以应用于链接，并且在鼠标经过时颜色可以还可以加深，就像默认的链接一样。
<p class="text-muted">...</p>
<p class="text-primary">...</p>
<p class="text-success">...</p>
<p class="text-info">...</p>
<p class="text-warning">...</p>
<p class="text-danger">...</p>

2)情境背景色
和情境文本颜色类一样，使用任意情境背景色类就可以设置元素的背景。链接组件在鼠标经过时颜色会加深，就像上面所讲的情境文本颜色类一样。
<p class="bg-primary">...</p>
<p class="bg-success">...</p>
<p class="bg-info">...</p>
<p class="bg-warning">...</p>
<p class="bg-danger">...</p>

3)关闭按钮
<button type="button" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></button>

4) 三角符号
通过使用三角符号可以指示某个元素具有下拉菜单的功能。注意，向上弹出式菜单中的三角符号是反方向的。
 
5)快速浮动
.pull-left
.pull-rught

6)让内容块居中
<div class="center-block">...</div>

7)清除浮动
通过为父元素添加 .clearfix 类可以很容易地清除浮动（float）

8)显示或隐藏内容
.show 和 .hidden 类可以强制任意元素显示或隐藏(对于屏幕阅读器也能起效)
.invisible 类可以被用来仅仅影响元素的可见性，也就是说，元素的 display 属性不被改变，并且这个元素仍然能够影响文档流的排布。

19.下拉菜单
1)不建议使用 .pull-right
从 v3.1.0 版本开始，我们不再建议对下拉菜单使用 .pull-right 类。如需将菜单右对齐，请使用 .dropdown-menu-right 类。导航条中如需添加右对齐的导航（nav）组件，请使用 .pull-right 的 mixin 版本，可以自动对齐菜单。如需左对齐，请使用 .dropdown-menu-left 类。

2)分割线
为下拉菜单添加一条分割线，用于将多个链接分组。
<ul class="dropdown-menu" aria-labelledby="dropdownMenuDivider">
  ...
  <li role="separator" class="divider"></li>
  ...
</ul>